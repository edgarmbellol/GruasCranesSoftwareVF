#!/usr/bin/env python3
"""
Script autom√°tico para sincronizar c√≥digos QR con el directorio de producci√≥n
Este script se ejecuta peri√≥dicamente para sincronizar QR generados por la aplicaci√≥n
"""

import os
import subprocess
import sys

def sync_qr_files():
    """Sincroniza todos los archivos QR con el directorio de producci√≥n"""
    try:
        # Directorios
        source_dir = '/home/mauricio/apps/flask_app/static/qr_codes'
        target_dir = '/var/www/gruas/static/qr_codes'
        
        # Crear directorio de destino si no existe
        subprocess.run(['sudo', 'mkdir', '-p', target_dir], check=True)
        
        # Establecer permisos del directorio
        subprocess.run(['sudo', 'chown', 'www-data:www-data', target_dir], check=True)
        subprocess.run(['sudo', 'chmod', '755', target_dir], check=True)
        
        # Sincronizar todos los archivos QR
        subprocess.run(['sudo', 'rsync', '-av', '--delete', 
                       f'{source_dir}/', f'{target_dir}/'], check=True)
        
        # Ajustar permisos de todos los archivos
        subprocess.run(['sudo', 'chown', '-R', 'www-data:www-data', target_dir], check=True)
        subprocess.run(['sudo', 'chmod', '-R', '644', target_dir], check=True)
        
        # Limpiar archivo de marcador si existe
        sync_marker = os.path.join(source_dir, '.sync_pending')
        if os.path.exists(sync_marker):
            os.remove(sync_marker)
        
        print("‚úÖ QR sincronizados correctamente con producci√≥n")
        return True
        
    except Exception as e:
        print(f"‚ùå Error sincronizando QR: {e}")
        return False

if __name__ == "__main__":
    print("üîÑ Iniciando sincronizaci√≥n autom√°tica de QR...")
    success = sync_qr_files()
    if success:
        print("‚úÖ Sincronizaci√≥n completada exitosamente")
        sys.exit(0)
    else:
        print("‚ùå Error en la sincronizaci√≥n")
        sys.exit(1)
